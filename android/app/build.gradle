def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePropertiesFile = rootProject.file("keystores/debug.keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
String DATE = (new Date()).format('yyyyMMdd')
//hudayriyat-
android {
//    compileSdkVersion rootProject.ext.compileSdkVersion
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
    def versionPropsFile = file('version.properties')
    def versionBuild
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_CODE'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['key.alias']
            keyPassword keystoreProperties['key.alias.password']
            storeFile file(keystoreProperties['key.store'])
            storePassword keystoreProperties['key.store.password']
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.modon.hudayriyatand"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode versionBuild
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        setProperty("archivesBaseName", "Hudayriyat" + "_" + "V1" + "_" + "(" + versionCode + ")")
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.config
            debuggable true
        }
        release {
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            signingConfig signingConfigs.config
            minifyEnabled false
            shrinkResources false
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = outputFileName.replace(outputFileName, "Hudayriyat" + "_" + "V1" + "_" + DATE + ".apk")
        }
    }
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(bundleRelease)) {
            autoIncrementBuildNumber()
        }
    }
}

flutter {
    source '../..'
}



dependencies {
    implementation project(':unityLibrary')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.guava:guava:27.0.1-android'
//    implementation 'com.google.firebase:firebase-messaging:21.0.1'
}
